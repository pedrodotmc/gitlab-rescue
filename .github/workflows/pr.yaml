name: PR
env:
  PROJECT_NAME: gitlab-rescue
on:
  pull_request:
    branches: [main]
jobs:
  # Test and lint jobs
  test:
    name: Code coverage
    runs-on: ubuntu-18.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
          components: clippy
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: "0.15.0"
          args: --doc --lib --tests --bin ${{ env.PROJECT_NAME }}
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
  # Build project
  build:
    name: ${{ matrix.job.os }} (${{ matrix.job.target }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - os: ubuntu-18.04
            target: x86_64-unknown-linux-gnu
          - os: macos-10.15
            target: x86_64-apple-darwin
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Needed packages by ${{ env.PROJECT_NAME }}
        shell: bash
        run: |
          case ${{ matrix.job.target }} in
            x86_64-apple-darwin) brew install openssl ;;
            *) sudo apt-get -y update ; sudo apt-get -y install libssl-dev ;;
          esac
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.job.target }}
          override: true
          profile: minimal
      - name: Show version information (Rust, cargo, GCC)
        shell: bash
        run: |
          gcc --version || true
          rustup -V
          rustup toolchain list
          rustup default
          cargo -V
          rustc -V
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.job.use-cross }}
          command: build
          args: --release --target=${{ matrix.job.target }}
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.job.cross }}
          command: test
          args: --target=${{ matrix.job.target }}
